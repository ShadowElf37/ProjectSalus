v0.0.0 (4/6/19)
- Added changelog
- Added handlers.py, main.py, server.py, response.py, mail.py
- Copied some smtp code from SO into mail.py and set it with Emery mail account

v0.0.1 (4/7/19)
- Stole response code from Mercury
- Stole log.py from Mercury
- Added cache.cfg, errors.cfg, ext.cfg, codes.cfg, navbar.cfg from Mercury
- Added much of the folder structure from Mercury
- Added index.html in web/home/
- Added client.py to have a neat little client class
- Cleaned up response.py and server.py to remove Mercury-specific functions
- Removed brute force protections (it was kinda stupid)
- Created TODO_ list

v0.0.2 (4/7/19)
- Hid passwords in a git-ignored file
- Added passwords.py to get passwords from secret file
- Added fileify.js, courtesty of Alwinfy

v0.0.3 (4/13/19)
- Work in progress server overhaul to use http.server in requisitioned_httpserver.py
- Added proc_manager.py to try and do server reboots; will replace with something neater later
- Added thread Overlord and Maestro in threadpool.py

v0.0.4 (4/14/19)
- Fixed the thread Overlord not running its threads
- Overrode some stuff to get the thread Overlord to handle requests properly

v0.0.5 (4/14/19)
- High quality cookie support
- Support for custom functions being pushed to the Overlord in an emergency

v0.0.6 (4/14/19)
- Cleaner Overlord function pushing (now push() and pushf())
- Removed codes.cfg now that we have a real server
- Added support for POST requests
- Added easy response.redirect() function
- Updated TODO_
- Added a try-except into the server so errors won't crash the whole server
- Threw GET code into HEAD but added a Response.head variable to limit it to a header

v0.0.7 (4/14/19)
- Removed HEAD code because it's dumb
- Allowed messages to be set for response codes
- Added httpserver_main.py to replace main.py soon; it really doesn't need to hold much, thankfully

v0.0.8 (4/14/19)
- Can finally reboot
- Renamed all the Mercury code to mercury_fname.py
- Renamed all the modern files to their proper things
- Added server rebooting; _main.py is now run remotely from main.py so it can manage that