v0.1.15 (5/11/19)
- Through a wrecking ball through all of the code everywhere and made a new serializer - @Serialized('file')

v0.1.14 (5/10/19)
- Improved error communication with the client
- Small improvements to mime guessing
- Made rendering cleaner and more efficient (although BinDict should be made better at some point... this is not great)

v0.1.13 (5/10/19)
- Added admin/controlboard.html
- Added GET addresses for update etc. while we wait on @Alwinfy; tested, is working
- Finished navbar

v0.1.12 (5/9/19)
- Get queries are now parsed from ? onward
- Responses now queue to send to avoid cookie race conditions
- Set navbar for ranks 0 and 1
- Added a bunch of html skeleton for future features

v0.1.11 (5/8/19)
- Escaped post request and replaced parser with an imported function

v0.1.10 (5/8/19)
- Fixed bug preventing login
- Made navbar more scalable

v0.1.9 (5/8/19)
- Added ShellAccount for guests so we don't have explosions everywhere
- Edited login CSS
- Added ranks 0 and 1 navbars with login (navbars themselves are incomplete)
- Switched to a new function wrapper for mime guessing to avoid errors
- Added three current pages to handler dict, set proper handlers for them

v0.1.8 (5/7/19)
- Created login page
- Created signup page
- Created login and signup CSS (a tad janky)

v0.1.7 (5/7/19)
- Added pre_call() to handle rank-specific rendering and any other things we may need some day
- Added js-less control buttons as rendered [[reboot_controls]]
- Ranked whitelist.json (still not used)
- Fixed rendering bug

v0.1.6 (5/7/19)
- Added Python rendering (use {{x}} to eval x) for attach_file()
- Redesigned rendering system to use regex
- Created htmlutil.py to house functions for more easily generating CSS links, etc.

v0.1.5 (5/7/19)
- Important bug fixes
- QOL tweaks, including a couple easy function responses in response, a post_call() called, and removal of obsolete code

v0.1.4 (5/6/19)
- Added global config cache
- Server can now reload config and filecache internally

v0.1.3 (5/6/19)
- Lots of good work on home and general.css
- Fixed up navbar.json and added to handler

v0.1.2 (5/4/19)
- Added general.css
- Made lots of important CSS (navbar, bottombar, main container)
- Minor bug fixes and tweaks

v0.1.1 (5/2/19)
- Switched locations.json to use mimetypes and did some funny tinkering to get it to work with the cache and server

v0.1.0 (5/2/19)
- Threw all the server code into server/ to remind us not to touch it unless we have to - it's also portable!
- Fixed imports
- Minor edits all around
- Fixed a major issue where path wasn't set on cookies, causing cookie access to fail spectacularly on alternate-dir reqs


=== MAJOR ===


v0.0.21 (5/1/19)
- Added file searching for assets/ based on locations.json in FileCache.read() - right now it uses ext, consider switching to MIME type

v0.0.20 (5/1/19)
- Added recursive file searching
- Added more flexible pathing to the cache
- Added quality docstring to attach_file()

v0.0.19 (5/1/19)
- Cleaned up some things
- Added a couple things to fix and support the now-working login system

v0.0.18 (4/25/19)
- Added find_item() and items() to PersistentDict
- Added login() to client - haven't implemented login page yet to test
- Abolished obsolete log.py

v0.0.17 (4/18/19)
- Abolished obsolete code
- Minor fixes

v0.0.16 (4/18/19)
- Added client-side file caching
- Cleaned up lots of bad errors
- Fixed some headers
- Switched responses to HTTP/1.1

v0.0.15 (4/17/19)
- Fixed rebooting issue by adding thread cleanup
- Converted config file formats to json after some infighting
- Added easy Config class and "persistent" objects for handling pickled dictionaries
- Cleaned up some code

v0.0.14 (4/16/19)
- Fixed pickling issue in client.py
- Made files load in binary by default and then decode so that you don't have to specify manually for unreadable files
- Moved all client work to RequestHandler so that response.py is pure and abstract and easy to use in another project

v0.0.13 (4/15/19)
- Moved user-token cookie to RequestHandler in handlers.py
- Cleaned up some code, courtesy Alwinfy
- Added default file type requirements for render

v0.0.12 (4/15/19)
- Added whitelist.cfg
- Added accounts.dat
- Added Account class in client.py
- Added proper nonces to ClientObj after much debugging and work - clients can now log in nice and good
- Added a test login and login-protected page

v0.0.11 (4/15/19)
- Added cross-platform pathing in main.py so we don't have to worry about Windows being retarded

v0.0.10 (4/15/19)
- Bad cookie retrieval attempts will no longer crash
- Fixed tee.py
- Added a server-side cache to increase performance

v0.0.9 (4/15/19)
- Modified Overlord to manage a global buffer for performance
- Added tee.py (broken atm) for logging
- Threw Server.run() into a while loop so it doesn't quit after an exception
- Minor fixes

v0.0.8 (4/14/19)
- Can finally reboot
- Renamed all the Mercury code to mercury_fname.py
- Renamed all the modern files to their proper things
- Added server rebooting; _main.py is now run remotely from main.py so it can manage that

v0.0.7 (4/14/19)
- Removed HEAD code because it's dumb
- Allowed messages to be set for response codes
- Added httpserver_main.py to replace main.py soon; it really doesn't need to hold much, thankfully

v0.0.6 (4/14/19)
- Cleaner Overlord function pushing (now push() and pushf())
- Removed codes.cfg now that we have a real server
- Added support for POST requests
- Added easy response.redirect() function
- Updated TODO_
- Added a try-except into the server so errors won't crash the whole server
- Threw GET code into HEAD but added a Response.head variable to limit it to a header

v0.0.5 (4/14/19)
- High quality cookie support
- Support for custom functions being pushed to the Overlord in an emergency

v0.0.4 (4/14/19)
- Fixed the thread Overlord not running its threads
- Overrode some stuff to get the thread Overlord to handle requests properly

v0.0.3 (4/13/19)
- Work in progress server overhaul to use http.server in requisitioned_httpserver.py
- Added proc_manager.py to try and do server reboots; will replace with something neater later
- Added thread Overlord and Maestro in threadpool.py

v0.0.2 (4/7/19)
- Hid passwords in a git-ignored file
- Added passwords.py to get passwords from secret file
- Added fileify.js, courtesty of Alwinfy

v0.0.1 (4/7/19)
- Stole response code from Mercury
- Stole log.py from Mercury
- Added cache.cfg, errors.cfg, ext.cfg, codes.cfg, navbar.cfg from Mercury
- Added much of the folder structure from Mercury
- Added index.html in web/home/
- Added client.py to have a neat little client class
- Cleaned up response.py and server.py to remove Mercury-specific functions
- Removed brute force protections (it was kinda stupid)
- Created TODO_ list

v0.0.0 (4/6/19)
- Added changelog
- Added handlers.py, main.py, server.py, response.py, mail.py
- Copied some smtp code from SO into mail.py and set it with Emery mail account
